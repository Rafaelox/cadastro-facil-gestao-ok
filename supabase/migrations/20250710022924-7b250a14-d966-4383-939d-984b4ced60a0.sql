-- Criar tabela histórico para registrar atendimentos realizados
CREATE TABLE public.historico (
  id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  agenda_id BIGINT NOT NULL,
  consultor_id BIGINT NOT NULL,
  servico_id BIGINT NOT NULL,
  cliente_id BIGINT NOT NULL,
  data_atendimento TIMESTAMP WITH TIME ZONE NOT NULL,
  valor_servico NUMERIC(10,2) NOT NULL DEFAULT 0.00,
  comissao_consultor NUMERIC(10,2) NOT NULL DEFAULT 0.00,
  observacoes_atendimento TEXT,
  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()
);

-- Criar índices para melhor performance
CREATE INDEX idx_historico_agenda_id ON public.historico(agenda_id);
CREATE INDEX idx_historico_consultor_id ON public.historico(consultor_id);
CREATE INDEX idx_historico_cliente_id ON public.historico(cliente_id);
CREATE INDEX idx_historico_data_atendimento ON public.historico(data_atendimento);

-- Habilitar RLS
ALTER TABLE public.historico ENABLE ROW LEVEL SECURITY;

-- Criar política para permitir acesso completo
CREATE POLICY "Permitir acesso completo ao historico" 
ON public.historico 
FOR ALL 
USING (true) 
WITH CHECK (true);

-- Criar trigger para atualizar updated_at automaticamente
CREATE TRIGGER update_historico_updated_at
  BEFORE UPDATE ON public.historico
  FOR EACH ROW
  EXECUTE FUNCTION public.update_updated_at_column();